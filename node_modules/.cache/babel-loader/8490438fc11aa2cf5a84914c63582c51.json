{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Aditya\\\\Desktop\\\\Krupa\\\\VodafonePhotoGallery\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";// import config from 'config';\nimport{authHeader}from'./auth-header';export var userService={login:login,logout:logout,register:register,getAll:getAll,getById:getById,update:update,delete:_delete};var backendurl=\"http://localhost:7000/\";function login(staffId,password){var requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({staffId:staffId,password:password})};// return fetch(`/users/authenticate`, requestOptions)\nreturn fetch(backendurl+\"employee/verify\",requestOptions).then(handleResponse).then(function(user){// console.log(\"User Services\");\n// console.log(user)\n// store user details and jwt token in local storage to keep user logged in between page refreshes\nif(!user.status){localStorage.setItem('user',JSON.stringify(user));return user;}});}function logout(){// remove user from local storage to log user out\nlocalStorage.removeItem('user');}function getAll(){var requestOptions={method:'GET',headers:authHeader()};return fetch(\"/users\",requestOptions).then(handleResponse);}function getById(id){var requestOptions={method:'GET',headers:authHeader()};return fetch(\"/users/\".concat(id),requestOptions).then(handleResponse);}function register(user){var requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(user)};return fetch(backendurl+\"signup\",requestOptions).then(handleResponse);// return fetch(`/users/register`, requestOptions).then(handleResponse);\n}function update(user){var requestOptions={method:'PUT',headers:_objectSpread({},authHeader(),{'Content-Type':'application/json'}),body:JSON.stringify(user)};return fetch(\"/users/\".concat(user.id),requestOptions).then(handleResponse);;}// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id){var requestOptions={method:'DELETE',headers:authHeader()};return fetch(\"/users/\".concat(id),requestOptions).then(handleResponse);}function handleResponse(response){return response.text().then(function(text){var data=text&&JSON.parse(text);if(!response.ok){if(response.status===401){// auto logout if 401 response returned from api\nlogout();// location.reload(true);\n}var error=data&&data.message||response.statusText;return Promise.reject(error);}return data;});}","map":{"version":3,"sources":["C:/Users/Aditya/Desktop/Krupa/VodafonePhotoGallery/src/Components/Services/user.service.js"],"names":["authHeader","userService","login","logout","register","getAll","getById","update","delete","_delete","backendurl","staffId","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","user","status","localStorage","setItem","removeItem","id","response","text","data","parse","ok","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["// import config from 'config';\r\nimport { authHeader } from './auth-header';\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    getById,\r\n    update,\r\n    delete: _delete\r\n};\r\n\r\nconst backendurl=\"http://localhost:7000/\";\r\n\r\nfunction login(staffId, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ staffId, password })\r\n    };\r\n\r\n    // return fetch(`/users/authenticate`, requestOptions)\r\n    return fetch(backendurl+`employee/verify`, requestOptions)\r\n        .then(handleResponse)\r\n        .then(user => {\r\n            // console.log(\"User Services\");\r\n            // console.log(user)\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            if(!user.status){\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                return user;\r\n            }\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction register(user) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(backendurl+`signup`, requestOptions).then(handleResponse);\r\n    // return fetch(`/users/register`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction update(user) {\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(`/users/${user.id}`, requestOptions).then(handleResponse);;\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n                // location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\Desktop\\\\Krupa\\\\VodafonePhotoGallery\\\\src\\\\Components\\\\Albums\\\\ListAlbum.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { albumsList } from '../../Redux/Actions/albumsList';\nimport Album from './Album';\nimport Loader from '../Common/Loader';\nimport Pagination from '../Common/Pagination';\nimport { history } from '../../Routing/history';\n\nclass ListAlbum extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onPageChanged = data => {\n      const {\n        currentPage,\n        totalPages,\n        pageLimit\n      } = data;\n      const offset = (currentPage - 1) * pageLimit;\n      const currentAlbums = this.props.albums.slice(offset, offset + pageLimit);\n      this.setState({\n        currentPage,\n        currentAlbums,\n        totalPages\n      });\n    };\n\n    this.state = {\n      loader: true,\n      currentAlbums: [],\n      currentPage: null,\n      totalPages: null\n    };\n  }\n\n  componentDidMount() {\n    let user = JSON.parse(localStorage.getItem('user')); // console.log(user);\n\n    if (!user) {\n      history.push('/Login');\n    }\n\n    this.props.albumsList().then(() => {\n      this.setState({\n        loader: false\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        loader: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      currentAlbums\n    } = this.state;\n    var totalAlbums = this.props.albums;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, totalAlbums !== undefined && totalAlbums.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      totalRecords: totalAlbums.length,\n      pageLimit: 23,\n      pageNeighbours: 1,\n      onPageChanged: this.onPageChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), currentAlbums.map(albums => React.createElement(Album, {\n      key: albums.id,\n      albums: albums,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))) : React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    albums: state.albums\n  };\n};\n\nexport default connect(mapStateToProps, {\n  albumsList\n})(ListAlbum);","map":{"version":3,"sources":["C:/Users/Aditya/Desktop/Krupa/VodafonePhotoGallery/src/Components/Albums/ListAlbum.js"],"names":["React","Fragment","connect","albumsList","Album","Loader","Pagination","history","ListAlbum","Component","constructor","props","onPageChanged","data","currentPage","totalPages","pageLimit","offset","currentAlbums","albums","slice","setState","state","loader","componentDidMount","user","JSON","parse","localStorage","getItem","push","then","catch","err","console","log","render","totalAlbums","undefined","length","map","id","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { albumsList } from '../../Redux/Actions/albumsList'\r\nimport Album from './Album'\r\nimport Loader from '../Common/Loader'\r\nimport Pagination from '../Common/Pagination'\r\nimport { history } from '../../Routing/history';\r\n\r\n\r\nclass ListAlbum extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            loader: true,\r\n            currentAlbums: [],\r\n            currentPage: null,\r\n            totalPages: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() { \r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        // console.log(user);\r\n        if(!user){\r\n            history.push('/Login')\r\n        }        \r\n        this.props.albumsList().then(() => {\r\n            this.setState({loader: false})\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            this.setState({loader: false})\r\n        });\r\n    }\r\n\r\n    onPageChanged = data => {\r\n        const { currentPage, totalPages, pageLimit } = data;\r\n    \r\n        const offset = (currentPage - 1) * pageLimit;\r\n        const currentAlbums = this.props.albums.slice(offset, offset + pageLimit);\r\n    \r\n        this.setState({ currentPage, currentAlbums, totalPages });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            currentAlbums\r\n          } = this.state;\r\n        var totalAlbums = this.props.albums;\r\n\r\n        return (\r\n            <Fragment>\r\n                {totalAlbums !== undefined && totalAlbums.length > 0 ?\r\n                    <Fragment>\r\n                        <Pagination\r\n                                    totalRecords={totalAlbums.length}\r\n                                    pageLimit={23}\r\n                                    pageNeighbours={1}\r\n                                    onPageChanged={this.onPageChanged}\r\n                                />\r\n                        {currentAlbums.map(albums => (\r\n                            <Album key={albums.id} albums={albums} />\r\n                        ))}\r\n                    </Fragment>\r\n                       :\r\n                    <Loader /> \r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        albums: state.albums\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {albumsList})(ListAlbum)"]},"metadata":{},"sourceType":"module"}